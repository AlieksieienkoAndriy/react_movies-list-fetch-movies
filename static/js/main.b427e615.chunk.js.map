{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/movies.js","App.js","index.js"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","key","imdbId","FindMovie","onAddMovie","useState","setTitle","setMovie","movieFound","setMovieFind","useEffect","htmlFor","type","id","placeholder","classNames","input","value","onChange","event","target","onClick","fetch","then","response","json","getResponse","result","Error","Title","Poster","Plot","imdbID","App","data","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKF,EAAMG,OACXC,IAAI,gBAIV,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJE,IAAI,WAIV,yBAAKH,UAAU,iBACb,uBAAGA,UAAU,cAAcD,EAAMK,SAIrC,yBAAKJ,UAAU,WACZD,EAAMM,YACP,6BACA,uBAAGC,KAAMP,EAAMQ,SAAf,aC1BKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKT,UAAU,UACZS,EAAOC,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CACEY,IAAKZ,EAAMa,OACXb,MAAOA,S,gBCJFc,G,MAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACjBC,mBAAS,IADQ,mBACpCX,EADoC,KAC7BY,EAD6B,OAGjBD,mBAAS,MAHQ,mBAGpChB,EAHoC,KAG7BkB,EAH6B,OAKRF,oBAAS,GALD,mBAKpCG,EALoC,KAKxBC,EALwB,KAO3CC,qBAAU,WACRD,GAAc,KACb,CAACpB,IAkBJ,OACE,oCACE,0BAAMC,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQqB,QAAQ,eAAjC,eAIA,yBAAKrB,UAAU,WACb,2BACEsB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxB,UAAWyB,IAAW,CACpBC,OAAO,EACP,aAAcR,IAEhBS,MAAOvB,EACPwB,SAAU,SAACC,GACTb,EAASa,EAAMC,OAAOH,WAI3BT,GACC,uBAAGlB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEsB,KAAK,SACLtB,UAAU,kBACV+B,QAnDQ,YCjBK,SAAA3B,GAAK,OAAI4B,MAAM,wCAAD,OAAyC5B,IAC/E6B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDiBzBC,CAAYhC,GAAO6B,MAAK,SAACI,GAClBA,EAAOC,MASVnB,GAAa,GARbF,EAAS,CACPb,MAAOiC,EAAOE,MACdrC,OAAQmC,EAAOG,OACfnC,YAAagC,EAAOI,KACpB7B,OAAQyB,EAAOK,OACfnC,QAAQ,8BAAD,OAAgC8B,EAAOK,eAwC5C,iBASF,yBAAK1C,UAAU,WACb,4BACEsB,KAAK,SACLtB,UAAU,oBACV+B,QAAS,WACPhC,GAASe,EAAWf,GACpBiB,EAAS,IACTC,EAAS,QANb,sBAeN,yBAAKjB,UAAU,aACXD,GACA,oCACE,wBAAIC,UAAU,SAAd,WACA,kBAAC,EAAD,CAAWD,MAAOA,S,OEzFjB4C,EAAM,WAAO,IAAD,EACK5B,mBAAS6B,GADd,mBAChBnC,EADgB,KACRoC,EADQ,KASvB,OACE,yBAAK7C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYS,OAAQA,KAEtB,yBAAKT,UAAU,WACb,kBAAC,EAAD,CAAWc,WAZE,SAACgC,GACbrC,EAAOsC,MAAK,SAAAhD,GAAK,OAAKA,EAAMa,SAAWkC,EAASlC,WACnDiC,EAAU,GAAD,mBAAKpC,GAAL,CAAaqC,WCN5BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b427e615.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getResponse } from '../../api/movies';\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [title, setTitle] = useState('');\n\n  const [movie, setMovie] = useState(null);\n\n  const [movieFound, setMovieFind] = useState(true);\n\n  useEffect(() => {\n    setMovieFind((true));\n  }, [movie]);\n\n  const onFindMovie = () => {\n    getResponse(title).then((result) => {\n      if (!result.Error) {\n        setMovie({\n          title: result.Title,\n          imgUrl: result.Poster,\n          description: result.Plot,\n          imdbId: result.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n        });\n      } else {\n        setMovieFind(false);\n      }\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': !movieFound,\n              })}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n              }}\n            />\n          </div>\n          {movieFound || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                movie && onAddMovie(movie);\n                setTitle('');\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        { movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nexport const getResponse = title => fetch(`//www.omdbapi.com/?apikey=aa871ce9&t=${title}`)\n  .then(response => response.json());\n// eslint-disable-next-line\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const onAddMovie = (newMovie) => {\n    if (!movies.find(movie => (movie.imdbId === newMovie.imdbId))) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}